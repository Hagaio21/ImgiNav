# Experiment 5: RGB Reconstruction + Segmentation (Large Model)
# Input: 512x512x3 (layout images), Latent: 32x32x8

experiment:
  name: "exp5_rgb_seg_large"
  save_path: "/work3/s233249/ImgiNav/experiments/NEW/exp5_rgb_seg_large"

dataset:
  manifest: "/work3/s233249/ImgiNav/datasets/layouts.csv"
  outputs:
    rgb: "layout_path"  # Column name for layout RGB images
    segmentation: "layout_path"  # Column name for layout/segmentation images (same as rgb)
  filters:
    is_empty: [false]  # Filter out empty layouts
  return_path: false

autoencoder:
  encoder:
    in_channels: 3
    latent_channels: 8
    base_channels: 128  # Larger model
    downsampling_steps: 4  # 512 -> 256 -> 128 -> 64 -> 32
    activation: SiLU
    norm_groups: 8
  
  decoder:
    latent_channels: 8
    base_channels: 128  # Larger model
    upsampling_steps: 4  # 32 -> 64 -> 128 -> 256 -> 512
    activation: SiLU
    norm_groups: 8
    heads:
      - type: RGBHead
        name: rgb
        out_channels: 3
        final_activation: tanh
      - type: SegmentationHead
        name: segmentation
        num_classes: 10  # From rgb_to_class.yaml

training:
  batch_size: 8
  num_workers: 8
  shuffle: true
  epochs: 100
  learning_rate: 0.0001
  optimizer: AdamW
  weight_decay: 0.01
  save_interval: 5  # Save checkpoint every 5 epochs
  sample_interval: 5  # Save sample images every 5 epochs
  early_stopping_patience: 15  # Stop if no improvement for 15 epochs
  early_stopping_min_delta: 0.001  # Minimum improvement to count
  early_stopping_restore_best: true  # Restore best checkpoint on early stop
  
  loss:
    type: CompositeLoss
    losses:
      - type: MSELoss
        key: rgb
        target: rgb
        weight: 1.0
      - type: CrossEntropyLoss
        key: segmentation
        target: segmentation
        weight: 0.5

